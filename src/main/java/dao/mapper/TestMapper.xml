<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.TestMapper" > 
<!-- Result Map 数据库映射到实体类  --> 
<resultMap id="tableMapToModel" type="model.TestModel" >
<result column="id" property="id"/> 
<result column="account" property="account"/> 
<result column="password" property="password"/> 
<result column="number" property="number"/> 
<result column="name" property="name"/> 
<result column="title" property="title"/> 
<result column="job" property="job"/> 
<result column="department" property="department"/> 
</resultMap>
 
<!-- 所有条件分页 --> 
<sql id="model"> 
  <include refid="modelCount"/>
  ${pageUtil.orderByCondition}
  <if test="pageUtil.paging == true" >
 ${pageUtil.limit}
 </if>
 </sql>
  
  
 <!-- 总记录数 --> 
  <sql id="modelCount">
  <where>
  	<choose>
  	<when test="pageUtil.like==true">
  	 <include refid="andOtherAllLike"/>
  	 </when>
   <otherwise>
  	 <include refid="andOtherAll"/>
   </otherwise>
   </choose>
   ${pageUtil.andCondition}
  </where>
  ${pageUtil.queryCondition}
  </sql> 
  
  <sql id="tbaleColumns"> 
  <trim suffix="" suffixOverrides=","> 
id,account,password,number,name,title,job,department,  
  </trim>
  </sql>
  
  
  <sql id="insertColumns">
  <trim suffix="" suffixOverrides=",">
<if test="id != null and id != '' " > 
id, </if> 
<if test="account != null and account != '' " > 
account, </if> 
<if test="password != null and password != '' " > 
password, </if> 
<if test="number != null and number != '' " > 
number, </if> 
<if test="name != null and name != '' " > 
name, </if> 
<if test="title != null and title != '' " > 
title, </if> 
<if test="job != null and job != '' " > 
job, </if> 
<if test="department != null and department != '' " > 
department, </if> 
   </trim>
  </sql>
  
  
  <sql id="insertParams">
  <trim suffix="" suffixOverrides=",">
<if test="id != null and id != '' " > 
#{id}, </if> 
<if test="account != null and account != '' " > 
#{account}, </if> 
<if test="password != null and password != '' " > 
#{password}, </if> 
<if test="number != null and number != '' " > 
#{number}, </if> 
<if test="name != null and name != '' " > 
#{name}, </if> 
<if test="title != null and title != '' " > 
#{title}, </if> 
<if test="job != null and job != '' " > 
#{job}, </if> 
<if test="department != null and department != '' " > 
#{department}, </if> 
  </trim>
  </sql>
  
  
  <sql id="updateParams">
  <trim suffix="" suffixOverrides=",">
<if test="id != null and id != '' " > 
id=#{id}, </if> 
<if test="account != null and account != '' " > 
account=#{account}, </if> 
<if test="password != null and password != '' " > 
password=#{password}, </if> 
<if test="number != null and number != '' " > 
number=#{number}, </if> 
<if test="name != null and name != '' " > 
name=#{name}, </if> 
<if test="title != null and title != '' " > 
title=#{title}, </if> 
<if test="job != null and job != '' " > 
job=#{job}, </if> 
<if test="department != null and department != '' " > 
department=#{department}, </if> 
  </trim>
  </sql>
  
  
  <sql id="andOther">
  <trim  suffixOverrides="," >
 <if test="id != null " > 
   and id =  #{id}
 </if> 
 <if test="account != null " > 
   and account =  #{account}
 </if> 
 <if test="password != null " > 
   and password =  #{password}
 </if> 
 <if test="number != null " > 
   and number =  #{number}
 </if> 
 <if test="name != null " > 
   and name =  #{name}
 </if> 
 <if test="title != null " > 
   and title =  #{title}
 </if> 
 <if test="job != null " > 
   and job =  #{job}
 </if> 
 <if test="department != null " > 
   and department =  #{department}
 </if> 
  </trim>
  </sql>
  
  
  <sql id="andOtherAll">
  <trim  suffixOverrides="," >
<if test="id != null and id != '' " > 
and id =  #{id} </if> 
<if test="account != null and account != '' " > 
and account =  #{account} </if> 
<if test="password != null and password != '' " > 
and password =  #{password} </if> 
<if test="number != null and number != '' " > 
and number =  #{number} </if> 
<if test="name != null and name != '' " > 
and name =  #{name} </if> 
<if test="title != null and title != '' " > 
and title =  #{title} </if> 
<if test="job != null and job != '' " > 
and job =  #{job} </if> 
<if test="department != null and department != '' " > 
and department =  #{department} </if> 
  </trim>
  </sql>
  
  
  <!-- 模糊查询判断 -->
  <sql id="andOtherAllLike">
    <trim  suffixOverrides="," >
	<if test="id != null and id != '' " > 
	and id like  &apos;%${id}%&apos;  </if> 
	<if test="account != null and account != '' " > 
	and id like  &apos;%${account}%&apos;  </if> 
	<if test="password != null and password != '' " > 
	and id like  &apos;%${password}%&apos;  </if> 
	<if test="number != null and number != '' " > 
	and id like  &apos;%${number}%&apos;  </if> 
	<if test="name != null and name != '' " > 
	and id like  &apos;%${name}%&apos;  </if> 
	<if test="title != null and title != '' " > 
	and id like  &apos;%${title}%&apos;  </if> 
	<if test="job != null and job != '' " > 
	and id like  &apos;%${job}%&apos;  </if> 
	<if test="department != null and department != '' " > 
	and id like  &apos;%${department}%&apos;  </if> 
    </trim>
  </sql>
  
  <!-- where 条件  -->
  <sql id="where">
   where 1=1
  </sql>
  
 <!-- columnKey  主键 列名称 ,视图获取不到主键 需要设置 -->
  <sql id="columnKey">
   and id=#{id}
  </sql>
  
  <!-- 自定义查询 -->
  <sql id="sql">
   <if test="sql != null and sql !=''">
  ${sql}
  </if>
  <if test="sql == null || sql==''"> 
   select <include refid="tbaleColumns"/> from Test <include refid="where"/>
  </if>
  </sql>
  
  <!-- 查询条件 -->
  <sql id="queryCondition">
    <if test="queryCondition != null and queryCondition != ''">
   	${queryCondition}
    </if>
  </sql>
  
  <!-- 添加,插入记录   -->
  <insert id="insert"  parameterType="model.TestModel" >
    insert into Test (<include refid="insertColumns"/>) values(<include refid="insertParams"/>);
  </insert>
  
  <!-- 添加,SQL添加   -->
  <insert id="insertBySql" parameterType="java.lang.String">
   <include refid="sql"/>
  </insert>
  <!-- 删除,主键删除   -->
  <delete id="deleteByPrimaryKey" parameterType="model.TestModel">
  delete from Test<include refid="where"/><include refid="columnKey"/>
  </delete>
  
  <!-- 删除,实体删除   -->
  <delete id="deleteByEntity" parameterType="model.TestModel">
  	delete from Test<include refid="where"/><include refid="andOtherAll"/>
  </delete>
  
 <!-- 删除,SQL删除   --> 
  <delete id="deleteBySql" parameterType="java.lang.String">
   <include refid="sql"/> 
  </delete>
  
  <!-- 修改,主键更新  -->
 <update id="updateByPrimaryKey" parameterType="model.TestModel" > 
  	update Test <set><include refid="updateParams"/></set><include refid="where"/><include refid="columnKey"/>
  </update>
  
  <!-- 修改,SQL更新 -->
  <update id="updateBySql" parameterType="java.lang.String">
   <include refid="sql"/>
  </update>
  
  <!-- 查询,主键查询   -->
  <select id="selectByPrimaryKey"  resultMap="tableMapToModel" parameterType="java.lang.Object">
  	select <include refid="tbaleColumns"/> from Test <include refid="where"/> <include refid="columnKey"/>
  </select>
  
  <!-- 查询,实体查询   -->
  <select id="selectByEntiry"  resultMap="tableMapToModel" parameterType="model.TestModel">
  	select <include refid="tbaleColumns"/> from Test <include refid="where"/> <include refid="andOtherAll"/>
  </select>
  
  <!-- 查询,SQL -->
  <select id="selectBySql"  resultMap="tableMapToModel" parameterType="java.lang.String">
  <include refid="sql"/>
  </select>
  
  <!-- 查询 ,总行数,分页 ,模型 -->
  <select id="selectByModelCount" resultType="java.lang.Integer"  parameterType="model.TestModel">
  select count(1) from Test <include refid="modelCount"/>
  </select>
  
  <!-- 查询,排序,分页,模型  -->
  <select id="selectByModel" resultMap="tableMapToModel"  parameterType="model.TestModel">
  select <include refid="tbaleColumns"/>from Test <include refid="model"/>
  </select>
  
  <!-- 查询,总行数,Map -->
  <select id="selectByMapCount" resultType="java.lang.Integer"  parameterType="java.util.Map">
  select count(1) from Test <include refid="where"/><include refid="andOtherAll"/>
  	    ${queryCondition}
  <if test="andCondition !=null and andCondition !=''">
   and ${andCondition}
  </if>
  <if test="orderCondition != null and queryCondition != ''" >
  order by ${orderCondition}
  </if>
  </select>
  
 <!-- 查询,参数查询,Map --> 
  <select id="selectByMap" resultMap="tableMapToModel"  parameterType="java.util.Map">
  select <include refid="tbaleColumns"/>from Test <include refid="where"/><include refid="andOtherAll"/>
  ${queryCondition}
  <if test="andCondition !=null and andCondition !=''">
  and ${andCondition}
 </if> 
  <if test="orderCondition != null and queryCondition != ''" >
  order by ${orderCondition}
   </if>
  </select>
  
  <!-- 查询,总行数,Map分页 -->
  <select id="selectByMapPagingCount" resultType="java.lang.Integer"  parameterType="java.util.Map">
  select count(0) from Test <include refid="where"/><include refid="andOtherAll"/>
  ${queryCondition}
  <if test="andCondition !=null and andCondition !=''">
  and ${andCondition}
  </if>
  ${pageUtil.queryCondition}
  ${pageUtil.andCondition}
  </select>
  
  
  <!-- 查询,参数查询,Map分页 -->
  <select id="selectByMapPaging" resultMap="tableMapToModel"  parameterType="java.util.Map">
  select <include refid="tbaleColumns"/>from Test <include refid="where"/><include refid="andOtherAll"/>
  ${queryCondition}
  <if test="andCondition !=null and andCondition !=''">
   and ${andCondition}
  </if>
  <if test="orderCondition != null and queryCondition != ''" >
  order by ${orderCondition}
   </if>
  	${pageUtil.queryCondition}
  	${pageUtil.andCondition}
  	${pageUtil.orderByCondition}
  	${pageUtil.limit}
  </select>
  
  <!--查询, 图表 -->
  <select id="charts" parameterType="java.util.Map" resultType="java.util.Map">
  <!-- '%Y-%m-%d %H:%i:%s' -->
  	SELECT COUNT(*),DATE_FORMAT(createTime,'${groupTimeFormat}') as createTime  FROM Test 
  <if test="startTimeFormat!=null and endTimeFormat!=null">
  WHERE 
  createTime&gt;=DATE_FORMAT(NOW(), '${startTimeFormat}') AND createTime&lt;=DATE_FORMAT(NOW(), '${endTimeFormat}')
  </if> 
  GROUP BY DATE_FORMAT(createTime,'${groupTimeFormat}')
  </select>
  
 <!--/////////////// 级联递归查询  一对多 ///////////////--> 
  <resultMap type="model.TestModel" id="tableMapToModelChild" extends="tableMapToModel">
    <!-- 一对一关联   注意 顺序       需要用时开启 -->
   <!--  
   <association property="TestModel" column="parentId" select="getParent">
   </association>
   -->
   <!-- 一对多关联  -->
  <collection property="listTestModel" column="id" select="getChild">
   <!-- 对象的属性 -->
   </collection>
  </resultMap>
  <!--  
  <select id="getParent" resultMap="tableMapToModelChild" parameterType="String">
  SELECT * FROM Test where id=#{parentId}
  </select>
  -->
  
  
  <select id="getChild" resultMap="tableMapToModelChild" parameterType="String">
   SELECT * FROM Test where parentId=#{id}
  </select>
  
  
  <select id="selectByChild" resultMap="tableMapToModelChild"  parameterType="model.TestModel">
  SELECT <include refid="tbaleColumns"/>FROM Test
   <where>
  <include refid="andOtherAll"/>
  	${pageUtil.andCondition}
    </where>
  ${pageUtil.queryCondition}
  ${pageUtil.orderByCondition}
   <if test="pageUtil.paging == true" >
  ${pageUtil.limit}
   </if>
  </select>
  
  
  
  
  </mapper>   
